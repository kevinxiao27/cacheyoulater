"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var index_1 = __importDefault(require("../index"));
var randomInRange_1 = __importDefault(require("../../helpers/randomInRange"));
var getTickAnimation = function (confetti, decorateOptions) {
    var gravity = 0;
    var colors = ["#E8B837"];
    var particleCount = (0, randomInRange_1.default)(13, 17);
    var spread = (0, randomInRange_1.default)(75, 85);
    var decay = (0, randomInRange_1.default)(0.97, 0.99);
    var startVelocity = (0, randomInRange_1.default)(9, 11);
    var ticks = (0, randomInRange_1.default)(40, 60);
    confetti(decorateOptions({
        particleCount: particleCount,
        spread: spread,
        colors: colors,
        decay: decay,
        startVelocity: startVelocity,
        ticks: ticks,
        gravity: gravity,
        angle: 45,
        origin: { x: 0, y: 1 },
    }));
    confetti(decorateOptions({
        particleCount: particleCount,
        spread: spread,
        colors: colors,
        decay: decay,
        startVelocity: startVelocity,
        ticks: ticks,
        gravity: gravity,
        angle: -45,
        origin: { x: 0, y: 0 },
    }));
    confetti(decorateOptions({
        particleCount: particleCount,
        spread: spread,
        colors: colors,
        decay: decay,
        startVelocity: startVelocity,
        ticks: ticks,
        gravity: gravity,
        angle: -135,
        origin: { x: 1, y: 0 },
    }));
    confetti(decorateOptions({
        particleCount: particleCount,
        spread: spread,
        colors: colors,
        decay: decay,
        startVelocity: startVelocity,
        ticks: ticks,
        gravity: gravity,
        angle: 135,
        origin: { x: 1, y: 1 },
    }));
};
function Crossfire(props) {
    return react_1.default.createElement(index_1.default, __assign({ getTickAnimation: getTickAnimation }, props));
}
exports.default = Crossfire;
